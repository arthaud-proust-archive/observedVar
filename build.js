class ObservedVar{constructor(e){this._value=e,this._version=0,this.listeners={}}get indexes(){return Object.keys(this.listeners).sort((e,s)=>parseInt(e)-parseInt(s))}get lastIndex(){return parseInt(this.indexes[this.indexes.length-1])}subscribe(e,s){let t=this.lastIndex+1;return this.listeners[t]={once:s,fn:e},{listenerIndex:t}}sub(...e){return this.subscribe(...e)}once(e,s){this.value===s?this.subscribe(e,!0):e()}unsubscribe(e){delete this.listeners[e]}unsub(...e){return this.unsubscribe(...e)}fire(){for(const[e,s]of Object.entries(this.listeners))s.fn(),s.once&&delete this.listeners[e]}get version(){return this._version}get value(){return this._value}get(){return this.value}set(e){this._version++,this._value=e,this.fire()}}module.exports={ObservedVar,Ov:ObservedVar};